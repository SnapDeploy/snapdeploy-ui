version: 2.1

orbs:
  aws-cli: circleci/aws-cli@5.3.0

jobs:
  build_and_deploy:
    docker:
      - image: cimg/node:20.11 # Node environment for Vite
    steps:
      - checkout
      - aws-cli/setup

      - run:
          name: Create deployment package
          command: |
            echo "Creating deployment package..."
            tar -czf snapdeploy-ui-${CIRCLE_SHA1}.tar.gz -C dist .
            echo "Deployment package created: snapdeploy-ui-${CIRCLE_SHA1}.tar.gz"

      - run:
          name: Get EC2 instance information
          command: |
            echo "Getting EC2 instance information..."
            INSTANCE_ID=$(aws ec2 describe-instances \
              --region $AWS_REGION \
              --filters "Name=tag:Service,Values=ui" "Name=instance-state-name,Values=running" \
              --query 'Reservations[0].Instances[0].InstanceId' \
              --output text)

            if [ "$INSTANCE_ID" = "None" ] || [ -z "$INSTANCE_ID" ]; then
              echo "Error: No running EC2 instance found with Service=ui tag"
              exit 1
            fi

            echo "Found UI instance: $INSTANCE_ID"
            echo "export INSTANCE_ID=$INSTANCE_ID" >> $BASH_ENV

      - run:
          name: Deploy to EC2 using AWS Systems Manager
          command: |
            echo "Deploying to EC2 instance $INSTANCE_ID..."

            # Upload the deployment package to S3
            aws s3 cp snapdeploy-ui-${CIRCLE_SHA1}.tar.gz s3://$S3_BUCKET/deployments/snapdeploy-ui-${CIRCLE_SHA1}.tar.gz

            # Execute deployment commands directly via Systems Manager
            aws ssm send-command \
              --region $AWS_REGION \
              --instance-ids $INSTANCE_ID \
              --document-name "AWS-RunShellScript" \
              --parameters 'commands=[
                "#!/bin/bash",
                "set -e",
                "echo \"Starting UI deployment...\"",
                "aws s3 cp s3://'$S3_BUCKET'/deployments/snapdeploy-ui-'$CIRCLE_SHA1'.tar.gz /tmp/",
                "if [ -d \"/home/ec2-user/ui-html\" ]; then mv /home/ec2-user/ui-html /home/ec2-user/ui-html.backup.$(date +%s); fi",
                "mkdir -p /home/ec2-user/ui-html",
                "tar -xzf /tmp/snapdeploy-ui-'$CIRCLE_SHA1'.tar.gz -C /home/ec2-user/ui-html/",
                "chown -R ec2-user:ec2-user /home/ec2-user/ui-html",
                "chmod -R 755 /home/ec2-user/ui-html",
                "sudo systemctl reload nginx",
                "rm -f /tmp/snapdeploy-ui-'$CIRCLE_SHA1'.tar.gz",
                "echo \"UI deployment completed successfully!\""
              ]' \
              --output text

      - run:
          name: Verify deployment
          command: |
            echo "Waiting for deployment to complete..."
            sleep 30

            echo "Verifying deployment..."
            # Get the public IP of the instance
            PUBLIC_IP=$(aws ec2 describe-instances \
              --region $AWS_REGION \
              --instance-ids $INSTANCE_ID \
              --query 'Reservations[0].Instances[0].PublicIpAddress' \
              --output text)

            if [ "$PUBLIC_IP" != "None" ] && [ -n "$PUBLIC_IP" ]; then
              echo "Testing deployment at http://$PUBLIC_IP"
              curl -f http://$PUBLIC_IP || echo "Warning: Could not reach deployed application"
            else
              echo "Warning: Could not get public IP for verification"
            fi

workflows:
  version: 2
  deploy:
    jobs:
      - build_and_deploy:
          context: AWS
